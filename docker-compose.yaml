version: '3.6'
services:
  telegraf:
    image: arm64v8/telegraf:latest
    volumes:
      - ./telegraf/etc/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - influxdb
    links:
      - influxdb
    ports:
      - '127.0.0.1:8125:8125/udp'
    # user: root

  socket-proxy:
    image: tecnativa/docker-socket-proxy
    container_name: socket-proxy
    restart: always
    privileged: true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - '127.0.0.1:2375:2375'
    environment:
      - LOG_LEVEL=debug # debug,info,notice,warning,err,crit,alert,emerg
      - CONTAINERS=1
      - INFO=1


  influxdb:
    image: influxdb:1.8-alpine
    env_file: configuration.env
    platform: linux/amd64
    ports:
      - '127.0.0.1:8086:8086'
    volumes:
      - ./:/imports
      - influxdb_data:/var/lib/influxdb

  grafana:
    image: grafana/grafana:8.0.2
    depends_on:
      - influxdb
    env_file: configuration.env
    links:
      - influxdb
    ports:
      - '127.0.0.1:3000:3000'
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
      - ./grafana/dashboards/:/var/lib/grafana/dashboards/

  mongo:
    container_name: mongo
    image: mongo:latest
    restart: unless-stopped
    ports:
      - "27017:27017"


  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.3
    platform: linux/amd64
    ports:
      - "9200:9200"
    environment:
      - xpack.security.enabled=false
      - node.name=elasticsearch
      - discovery.type=single-node


  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro



  metrics:
    container_name: metrics
    build:
      context: metrics
      dockerfile: Dockerfile
    image: metrics:latest
    depends_on:
      - elasticsearch
      - mongo
      - nginx
    ports:
      - '127.0.0.1:8080:8080'

volumes:
  grafana_data: { }
  influxdb_data: { }
